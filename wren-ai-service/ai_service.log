poetry run python -m src.force_update_config
Successfully updated engine names to 'wren_ui' in all pipelines
poetry run python -m src.__main__
INFO:     Will watch for changes in these directories: ['/workspace/project/wren/wren-ai-service']
INFO:     Uvicorn running on http://127.0.0.1:5556 (Press CTRL+C to quit)
INFO:     Started reloader process [6926] using WatchFiles
INFO:     Started server process [6989]
INFO:     Waiting for application startup.
W1028 10:45:26.029 6989 wren-ai-service:155] SQL pairs file not found: sql_pairs.json
I1028 10:45:26.434 6989 wren-ai-service:315] Service version: 0.27.15
Langfuse client is disabled since no public_key was provided as a parameter or environment variable 'LANGFUSE_PUBLIC_KEY'. See our docs: https://langfuse.com/docs/sdk/python/low-level-sdk#initialize-client
I1028 10:45:26.445 6989 wren-ai-service:86] LANGFUSE_ENABLE: True
I1028 10:45:26.445 6989 wren-ai-service:87] LANGFUSE_HOST: https://cloud.langfuse.com
INFO:     Application startup complete.
INFO:     127.0.0.1:54922 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:34222 - "GET /health HTTP/1.1" 200 OK
INFO:     127.0.0.1:53920 - "GET /health HTTP/1.1" 200 OK
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:2249: UnsupportedFieldAttributeWarning: The 'alias' attribute with value AliasChoices(choices=['configurations', 'configuration']) was provided to the `Field()` function, which has no effect in the context it was used. 'alias' is field-specific metadata, and can only be attached to a model field using `Annotated` metadata or by assignment. This may have happened because an `Annotated` type alias using the `type` statement was used, or if the `Field()` function was attached to a single member of a union type.
  warnings.warn(
/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:2249: UnsupportedFieldAttributeWarning: The 'validation_alias' attribute with value AliasChoices(choices=['mdl_hash', 'id']) was provided to the `Field()` function, which has no effect in the context it was used. 'validation_alias' is field-specific metadata, and can only be attached to a model field using `Annotated` metadata or by assignment. This may have happened because an `Annotated` type alias using the `type` statement was used, or if the `Field()` function was attached to a single member of a union type.
  warnings.warn(
INFO:     127.0.0.1:37186 - "POST /v1/semantics-preparations HTTP/1.1" 200 OK
I1028 11:29:52.306 6989 wren-ai-service:74] MDL: {"schema":"public","catalog":"wrenai","dataSource":"DUCKDB","models":[{"name":"departments","columns":[{"name":"dept_no","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"A unique identifier for each department. It serves as the primary key of the table.","displayName":"dept_no"}},{"name":"dept_name","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"The name of the department. Limited to a maximum of 40 characters. This column is also unique across the table, ensuring no two departments share the same name","displayName":"dept_name"}},{"name":"dept_emp","type":"dept_emp","properties":{},"relationship":"DepartmentsDept_noDept_empDept_no","isCalculated":false,"notNull":false},{"name":"dept_manager","type":"dept_manager","properties":{},"relationship":"DepartmentsDept_noDept_managerDept_no","isCalculated":false,"notNull":false}],"tableReference":{"catalog":"memory","schema":"main","table":"departments"},"cached":false,"properties":{"displayName":"departments"},"primaryKey":""},{"name":"dept_emp","columns":[{"name":"emp_no","type":"INTEGER","isCalculated":false,"notNull":false,"properties":{"description":"The employee number.","displayName":"emp_no"}},{"name":"dept_no","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"The department number the employee is associated with, referencing the dept_no in the departments table.","displayName":"dept_no"}},{"name":"from_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The start date of the employee's association with the department.","displayName":"from_date"}},{"name":"to_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The end date of the employee's association with the department","displayName":"to_date"}},{"name":"departments","type":"departments","properties":{},"relationship":"DepartmentsDept_noDept_empDept_no","isCalculated":false,"notNull":false},{"name":"employees","type":"employees","properties":{},"relationship":"Dept_empEmp_noEmployeesEmp_no","isCalculated":false,"notNull":false}],"tableReference":{"catalog":"memory","schema":"main","table":"dept_emp"},"cached":false,"properties":{"displayName":"dept_emp"},"primaryKey":""},{"name":"dept_manager","columns":[{"name":"emp_no","type":"INTEGER","isCalculated":false,"notNull":false,"properties":{"description":"The employee number of the department manager","displayName":"emp_no"}},{"name":"dept_no","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"The department number that the manager is assigned to, referencing the dept_no in the departments table.","displayName":"dept_no"}},{"name":"from_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The start date of the employee’s managerial role in the department.","displayName":"from_date"}},{"name":"to_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The end date of the employee’s managerial role in the department.","displayName":"to_date"}},{"name":"employees","type":"employees","properties":{},"relationship":"Dept_managerEmp_noEmployeesEmp_no","isCalculated":false,"notNull":false},{"name":"departments","type":"departments","properties":{},"relationship":"DepartmentsDept_noDept_managerDept_no","isCalculated":false,"notNull":false}],"tableReference":{"catalog":"memory","schema":"main","table":"dept_manager"},"cached":false,"properties":{"displayName":"dept_manager","description":"Tracks the assignment of managers to departments, including the period during which they managed a department"},"primaryKey":""},{"name":"employees","columns":[{"name":"emp_no","type":"INTEGER","isCalculated":false,"notNull":false,"properties":{"description":"A unique identifier for each employee. It serves as the primary key of the table","displayName":"emp_no"}},{"name":"birth_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The birth date of the employee.","displayName":"birth_date"}},{"name":"first_name","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"The first name of the employee. Limited to a maximum of 14 characters.","displayName":"first_name"}},{"name":"last_name","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"The last name of the employee. Limited to a maximum of 16 characters.","displayName":"last_name"}},{"name":"gender","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"The gender of the employee, with possible values 'M' (Male) or 'F' (Female).","displayName":"gender"}},{"name":"hire_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The date when the employee was hired.","displayName":"hire_date"}},{"name":"titles","type":"titles","properties":{},"relationship":"EmployeesEmp_noTitlesEmp_no","isCalculated":false,"notNull":false},{"name":"salaries","type":"salaries","properties":{},"relationship":"EmployeesEmp_noSalariesEmp_no","isCalculated":false,"notNull":false},{"name":"dept_manager","type":"dept_manager","properties":{},"relationship":"Dept_managerEmp_noEmployeesEmp_no","isCalculated":false,"notNull":false},{"name":"dept_emp","type":"dept_emp","properties":{},"relationship":"Dept_empEmp_noEmployeesEmp_no","isCalculated":false,"notNull":false}],"tableReference":{"catalog":"memory","schema":"main","table":"employees"},"cached":false,"properties":{"displayName":"employees","description":"Stores basic information about employees such as their employee number, name, gender, birth date, and hire date"},"primaryKey":""},{"name":"salaries","columns":[{"name":"emp_no","type":"INTEGER","isCalculated":false,"notNull":false,"properties":{"description":"The employee number","displayName":"emp_no"}},{"name":"salary","type":"INTEGER","isCalculated":false,"notNull":false,"properties":{"description":"The salary of the employee.","displayName":"salary"}},{"name":"from_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The start date of the salary period.","displayName":"from_date"}},{"name":"to_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The end date of the salary period.","displayName":"to_date"}},{"name":"employees","type":"employees","properties":{},"relationship":"EmployeesEmp_noSalariesEmp_no","isCalculated":false,"notNull":false}],"tableReference":{"catalog":"memory","schema":"main","table":"salaries"},"cached":false,"properties":{"displayName":"salaries","description":"Tracks the salary of employees, including the period during which each salary was valid."},"primaryKey":""},{"name":"titles","columns":[{"name":"emp_no","type":"INTEGER","isCalculated":false,"notNull":false,"properties":{"description":"The employee number","displayName":"emp_no"}},{"name":"title","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"The title or position held by the employee. Limited to a maximum of 50 characters.","displayName":"title"}},{"name":"from_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The start date when the employee held this title","displayName":"from_date"}},{"name":"to_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The end date when the employee held this title. This can be NULL if the employee currently holds the title.","displayName":"to_date"}},{"name":"employees","type":"employees","properties":{},"relationship":"EmployeesEmp_noTitlesEmp_no","isCalculated":false,"notNull":false}],"tableReference":{"catalog":"memory","schema":"main","table":"titles"},"cached":false,"properties":{"displayName":"titles","description":"Tracks the titles (positions) held by employees, including the period during which they held each title."},"primaryKey":""}],"relationships":[{"name":"EmployeesEmp_noTitlesEmp_no","models":["employees","titles"],"joinType":"ONE_TO_MANY","condition":"\"employees\".emp_no = \"titles\".emp_no","properties":{"description":"Each entry represents a title held by an employee during a specific time period."}},{"name":"DepartmentsDept_noDept_empDept_no","models":["departments","dept_emp"],"joinType":"ONE_TO_MANY","condition":"\"departments\".dept_no = \"dept_emp\".dept_no","properties":{}},{"name":"EmployeesEmp_noSalariesEmp_no","models":["employees","salaries"],"joinType":"ONE_TO_MANY","condition":"\"employees\".emp_no = \"salaries\".emp_no","properties":{}},{"name":"Dept_managerEmp_noEmployeesEmp_no","models":["dept_manager","employees"],"joinType":"MANY_TO_ONE","condition":"\"dept_manager\".emp_no = \"employees\".emp_no","properties":{}},{"name":"Dept_empEmp_noEmployeesEmp_no","models":["dept_emp","employees"],"joinType":"MANY_TO_ONE","condition":"\"dept_emp\".emp_no = \"employees\".emp_no","properties":{"description":"meaning an employee can be associated with multiple departments, titles, and salaries over time."}},{"name":"DepartmentsDept_noDept_managerDept_no","models":["departments","dept_manager"],"joinType":"ONE_TO_MANY","condition":"\"departments\".dept_no = \"dept_manager\".dept_no","properties":{}}],"views":[]}
I1028 11:29:52.307 6989 wren-ai-service:373] Project ID: None, DB Schema Indexing pipeline is running...
I1028 11:29:52.307 6989 wren-ai-service:166] Project ID: None, Historical Question Indexing pipeline is running...
I1028 11:29:52.308 6989 wren-ai-service:150] Project ID: None, Table Description Indexing pipeline is running...
I1028 11:29:52.308 6989 wren-ai-service:199] Project ID: None SQL Pairs Indexing pipeline is running...
I1028 11:29:52.309 6989 wren-ai-service:92] Project ID: None, Project Meta Indexing pipeline is running...
I1028 11:29:52.311 6989 wren-ai-service:61] MDL JSON: {'schema': 'public', 'catalog': 'wrenai', 'dataSource': 'DUCKDB', 'models': [{'name': 'departments', 'columns': [{'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each department. It serves as the primary key of the table.', 'displayName': 'dept_no'}}, {'name': 'dept_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The name of the department. Limited to a maximum of 40 characters. This column is also unique across the table, ensuring no two departments share the same name', 'displayName': 'dept_name'}}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'departments'}, 'cached': False, 'properties': {'displayName': 'departments'}, 'primaryKey': ''}, {'name': 'dept_emp', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number.', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number the employee is associated with, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The start date of the employee's association with the department.", 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The end date of the employee's association with the department", 'displayName': 'to_date'}}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_emp'}, 'cached': False, 'properties': {'displayName': 'dept_emp'}, 'primaryKey': ''}, {'name': 'dept_manager', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number of the department manager', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number that the manager is assigned to, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the employee’s managerial role in the department.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the employee’s managerial role in the department.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_manager'}, 'cached': False, 'properties': {'displayName': 'dept_manager', 'description': 'Tracks the assignment of managers to departments, including the period during which they managed a department'}, 'primaryKey': ''}, {'name': 'employees', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each employee. It serves as the primary key of the table', 'displayName': 'emp_no'}}, {'name': 'birth_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The birth date of the employee.', 'displayName': 'birth_date'}}, {'name': 'first_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The first name of the employee. Limited to a maximum of 14 characters.', 'displayName': 'first_name'}}, {'name': 'last_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The last name of the employee. Limited to a maximum of 16 characters.', 'displayName': 'last_name'}}, {'name': 'gender', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The gender of the employee, with possible values 'M' (Male) or 'F' (Female).", 'displayName': 'gender'}}, {'name': 'hire_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The date when the employee was hired.', 'displayName': 'hire_date'}}, {'name': 'titles', 'type': 'titles', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'salaries', 'type': 'salaries', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'employees'}, 'cached': False, 'properties': {'displayName': 'employees', 'description': 'Stores basic information about employees such as their employee number, name, gender, birth date, and hire date'}, 'primaryKey': ''}, {'name': 'salaries', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'salary', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The salary of the employee.', 'displayName': 'salary'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the salary period.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the salary period.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'salaries'}, 'cached': False, 'properties': {'displayName': 'salaries', 'description': 'Tracks the salary of employees, including the period during which each salary was valid.'}, 'primaryKey': ''}, {'name': 'titles', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'title', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The title or position held by the employee. Limited to a maximum of 50 characters.', 'displayName': 'title'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date when the employee held this title', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date when the employee held this title. This can be NULL if the employee currently holds the title.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'titles'}, 'cached': False, 'properties': {'displayName': 'titles', 'description': 'Tracks the titles (positions) held by employees, including the period during which they held each title.'}, 'primaryKey': ''}], 'relationships': [{'name': 'EmployeesEmp_noTitlesEmp_no', 'models': ['employees', 'titles'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "titles".emp_no', 'properties': {'description': 'Each entry represents a title held by an employee during a specific time period.'}}, {'name': 'DepartmentsDept_noDept_empDept_no', 'models': ['departments', 'dept_emp'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_emp".dept_no', 'properties': {}}, {'name': 'EmployeesEmp_noSalariesEmp_no', 'models': ['employees', 'salaries'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "salaries".emp_no', 'properties': {}}, {'name': 'Dept_managerEmp_noEmployeesEmp_no', 'models': ['dept_manager', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_manager".emp_no = "employees".emp_no', 'properties': {}}, {'name': 'Dept_empEmp_noEmployeesEmp_no', 'models': ['dept_emp', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_emp".emp_no = "employees".emp_no', 'properties': {'description': 'meaning an employee can be associated with multiple departments, titles, and salaries over time.'}}, {'name': 'DepartmentsDept_noDept_managerDept_no', 'models': ['departments', 'dept_manager'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_manager".dept_no', 'properties': {}}], 'views': []}
I1028 11:29:52.311 6989 wren-ai-service:61] MDL JSON: {'schema': 'public', 'catalog': 'wrenai', 'dataSource': 'DUCKDB', 'models': [{'name': 'departments', 'columns': [{'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each department. It serves as the primary key of the table.', 'displayName': 'dept_no'}}, {'name': 'dept_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The name of the department. Limited to a maximum of 40 characters. This column is also unique across the table, ensuring no two departments share the same name', 'displayName': 'dept_name'}}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'departments'}, 'cached': False, 'properties': {'displayName': 'departments'}, 'primaryKey': ''}, {'name': 'dept_emp', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number.', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number the employee is associated with, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The start date of the employee's association with the department.", 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The end date of the employee's association with the department", 'displayName': 'to_date'}}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_emp'}, 'cached': False, 'properties': {'displayName': 'dept_emp'}, 'primaryKey': ''}, {'name': 'dept_manager', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number of the department manager', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number that the manager is assigned to, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the employee’s managerial role in the department.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the employee’s managerial role in the department.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_manager'}, 'cached': False, 'properties': {'displayName': 'dept_manager', 'description': 'Tracks the assignment of managers to departments, including the period during which they managed a department'}, 'primaryKey': ''}, {'name': 'employees', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each employee. It serves as the primary key of the table', 'displayName': 'emp_no'}}, {'name': 'birth_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The birth date of the employee.', 'displayName': 'birth_date'}}, {'name': 'first_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The first name of the employee. Limited to a maximum of 14 characters.', 'displayName': 'first_name'}}, {'name': 'last_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The last name of the employee. Limited to a maximum of 16 characters.', 'displayName': 'last_name'}}, {'name': 'gender', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The gender of the employee, with possible values 'M' (Male) or 'F' (Female).", 'displayName': 'gender'}}, {'name': 'hire_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The date when the employee was hired.', 'displayName': 'hire_date'}}, {'name': 'titles', 'type': 'titles', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'salaries', 'type': 'salaries', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'employees'}, 'cached': False, 'properties': {'displayName': 'employees', 'description': 'Stores basic information about employees such as their employee number, name, gender, birth date, and hire date'}, 'primaryKey': ''}, {'name': 'salaries', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'salary', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The salary of the employee.', 'displayName': 'salary'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the salary period.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the salary period.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'salaries'}, 'cached': False, 'properties': {'displayName': 'salaries', 'description': 'Tracks the salary of employees, including the period during which each salary was valid.'}, 'primaryKey': ''}, {'name': 'titles', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'title', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The title or position held by the employee. Limited to a maximum of 50 characters.', 'displayName': 'title'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date when the employee held this title', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date when the employee held this title. This can be NULL if the employee currently holds the title.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'titles'}, 'cached': False, 'properties': {'displayName': 'titles', 'description': 'Tracks the titles (positions) held by employees, including the period during which they held each title.'}, 'primaryKey': ''}], 'relationships': [{'name': 'EmployeesEmp_noTitlesEmp_no', 'models': ['employees', 'titles'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "titles".emp_no', 'properties': {'description': 'Each entry represents a title held by an employee during a specific time period.'}}, {'name': 'DepartmentsDept_noDept_empDept_no', 'models': ['departments', 'dept_emp'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_emp".dept_no', 'properties': {}}, {'name': 'EmployeesEmp_noSalariesEmp_no', 'models': ['employees', 'salaries'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "salaries".emp_no', 'properties': {}}, {'name': 'Dept_managerEmp_noEmployeesEmp_no', 'models': ['dept_manager', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_manager".emp_no = "employees".emp_no', 'properties': {}}, {'name': 'Dept_empEmp_noEmployeesEmp_no', 'models': ['dept_emp', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_emp".emp_no = "employees".emp_no', 'properties': {'description': 'meaning an employee can be associated with multiple departments, titles, and salaries over time.'}}, {'name': 'DepartmentsDept_noDept_managerDept_no', 'models': ['departments', 'dept_manager'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_manager".dept_no', 'properties': {}}], 'views': []}
I1028 11:29:52.312 6989 wren-ai-service:61] MDL JSON: {'schema': 'public', 'catalog': 'wrenai', 'dataSource': 'DUCKDB', 'models': [{'name': 'departments', 'columns': [{'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each department. It serves as the primary key of the table.', 'displayName': 'dept_no'}}, {'name': 'dept_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The name of the department. Limited to a maximum of 40 characters. This column is also unique across the table, ensuring no two departments share the same name', 'displayName': 'dept_name'}}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'departments'}, 'cached': False, 'properties': {'displayName': 'departments'}, 'primaryKey': ''}, {'name': 'dept_emp', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number.', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number the employee is associated with, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The start date of the employee's association with the department.", 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The end date of the employee's association with the department", 'displayName': 'to_date'}}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_emp'}, 'cached': False, 'properties': {'displayName': 'dept_emp'}, 'primaryKey': ''}, {'name': 'dept_manager', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number of the department manager', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number that the manager is assigned to, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the employee’s managerial role in the department.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the employee’s managerial role in the department.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_manager'}, 'cached': False, 'properties': {'displayName': 'dept_manager', 'description': 'Tracks the assignment of managers to departments, including the period during which they managed a department'}, 'primaryKey': ''}, {'name': 'employees', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each employee. It serves as the primary key of the table', 'displayName': 'emp_no'}}, {'name': 'birth_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The birth date of the employee.', 'displayName': 'birth_date'}}, {'name': 'first_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The first name of the employee. Limited to a maximum of 14 characters.', 'displayName': 'first_name'}}, {'name': 'last_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The last name of the employee. Limited to a maximum of 16 characters.', 'displayName': 'last_name'}}, {'name': 'gender', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The gender of the employee, with possible values 'M' (Male) or 'F' (Female).", 'displayName': 'gender'}}, {'name': 'hire_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The date when the employee was hired.', 'displayName': 'hire_date'}}, {'name': 'titles', 'type': 'titles', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'salaries', 'type': 'salaries', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'employees'}, 'cached': False, 'properties': {'displayName': 'employees', 'description': 'Stores basic information about employees such as their employee number, name, gender, birth date, and hire date'}, 'primaryKey': ''}, {'name': 'salaries', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'salary', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The salary of the employee.', 'displayName': 'salary'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the salary period.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the salary period.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'salaries'}, 'cached': False, 'properties': {'displayName': 'salaries', 'description': 'Tracks the salary of employees, including the period during which each salary was valid.'}, 'primaryKey': ''}, {'name': 'titles', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'title', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The title or position held by the employee. Limited to a maximum of 50 characters.', 'displayName': 'title'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date when the employee held this title', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date when the employee held this title. This can be NULL if the employee currently holds the title.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'titles'}, 'cached': False, 'properties': {'displayName': 'titles', 'description': 'Tracks the titles (positions) held by employees, including the period during which they held each title.'}, 'primaryKey': ''}], 'relationships': [{'name': 'EmployeesEmp_noTitlesEmp_no', 'models': ['employees', 'titles'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "titles".emp_no', 'properties': {'description': 'Each entry represents a title held by an employee during a specific time period.'}}, {'name': 'DepartmentsDept_noDept_empDept_no', 'models': ['departments', 'dept_emp'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_emp".dept_no', 'properties': {}}, {'name': 'EmployeesEmp_noSalariesEmp_no', 'models': ['employees', 'salaries'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "salaries".emp_no', 'properties': {}}, {'name': 'Dept_managerEmp_noEmployeesEmp_no', 'models': ['dept_manager', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_manager".emp_no = "employees".emp_no', 'properties': {}}, {'name': 'Dept_empEmp_noEmployeesEmp_no', 'models': ['dept_emp', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_emp".emp_no = "employees".emp_no', 'properties': {'description': 'meaning an employee can be associated with multiple departments, titles, and salaries over time.'}}, {'name': 'DepartmentsDept_noDept_managerDept_no', 'models': ['departments', 'dept_manager'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_manager".dept_no', 'properties': {}}], 'views': []}
I1028 11:29:52.312 6989 wren-ai-service:61] MDL JSON: {'schema': 'public', 'catalog': 'wrenai', 'dataSource': 'DUCKDB', 'models': [{'name': 'departments', 'columns': [{'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each department. It serves as the primary key of the table.', 'displayName': 'dept_no'}}, {'name': 'dept_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The name of the department. Limited to a maximum of 40 characters. This column is also unique across the table, ensuring no two departments share the same name', 'displayName': 'dept_name'}}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'departments'}, 'cached': False, 'properties': {'displayName': 'departments'}, 'primaryKey': ''}, {'name': 'dept_emp', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number.', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number the employee is associated with, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The start date of the employee's association with the department.", 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The end date of the employee's association with the department", 'displayName': 'to_date'}}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_emp'}, 'cached': False, 'properties': {'displayName': 'dept_emp'}, 'primaryKey': ''}, {'name': 'dept_manager', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number of the department manager', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number that the manager is assigned to, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the employee’s managerial role in the department.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the employee’s managerial role in the department.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_manager'}, 'cached': False, 'properties': {'displayName': 'dept_manager', 'description': 'Tracks the assignment of managers to departments, including the period during which they managed a department'}, 'primaryKey': ''}, {'name': 'employees', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each employee. It serves as the primary key of the table', 'displayName': 'emp_no'}}, {'name': 'birth_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The birth date of the employee.', 'displayName': 'birth_date'}}, {'name': 'first_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The first name of the employee. Limited to a maximum of 14 characters.', 'displayName': 'first_name'}}, {'name': 'last_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The last name of the employee. Limited to a maximum of 16 characters.', 'displayName': 'last_name'}}, {'name': 'gender', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The gender of the employee, with possible values 'M' (Male) or 'F' (Female).", 'displayName': 'gender'}}, {'name': 'hire_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The date when the employee was hired.', 'displayName': 'hire_date'}}, {'name': 'titles', 'type': 'titles', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'salaries', 'type': 'salaries', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'employees'}, 'cached': False, 'properties': {'displayName': 'employees', 'description': 'Stores basic information about employees such as their employee number, name, gender, birth date, and hire date'}, 'primaryKey': ''}, {'name': 'salaries', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'salary', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The salary of the employee.', 'displayName': 'salary'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the salary period.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the salary period.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'salaries'}, 'cached': False, 'properties': {'displayName': 'salaries', 'description': 'Tracks the salary of employees, including the period during which each salary was valid.'}, 'primaryKey': ''}, {'name': 'titles', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'title', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The title or position held by the employee. Limited to a maximum of 50 characters.', 'displayName': 'title'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date when the employee held this title', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date when the employee held this title. This can be NULL if the employee currently holds the title.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'titles'}, 'cached': False, 'properties': {'displayName': 'titles', 'description': 'Tracks the titles (positions) held by employees, including the period during which they held each title.'}, 'primaryKey': ''}], 'relationships': [{'name': 'EmployeesEmp_noTitlesEmp_no', 'models': ['employees', 'titles'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "titles".emp_no', 'properties': {'description': 'Each entry represents a title held by an employee during a specific time period.'}}, {'name': 'DepartmentsDept_noDept_empDept_no', 'models': ['departments', 'dept_emp'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_emp".dept_no', 'properties': {}}, {'name': 'EmployeesEmp_noSalariesEmp_no', 'models': ['employees', 'salaries'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "salaries".emp_no', 'properties': {}}, {'name': 'Dept_managerEmp_noEmployeesEmp_no', 'models': ['dept_manager', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_manager".emp_no = "employees".emp_no', 'properties': {}}, {'name': 'Dept_empEmp_noEmployeesEmp_no', 'models': ['dept_emp', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_emp".emp_no = "employees".emp_no', 'properties': {'description': 'meaning an employee can be associated with multiple departments, titles, and salaries over time.'}}, {'name': 'DepartmentsDept_noDept_managerDept_no', 'models': ['departments', 'dept_manager'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_manager".dept_no', 'properties': {}}], 'views': []}
INFO:     127.0.0.1:37186 - "GET /v1/semantics-preparations/a522d9669e3626bdc068ace3684e8e936f6d175d/status HTTP/1.1" 200 OK
Project ID: None, Chunking views into documents: 0it [00:00, ?it/s]Project ID: None, Chunking views into documents: 0it [00:00, ?it/s]
Project ID: None, Chunking table descriptions into documents:   0%|          | 0/6 [00:00<?, ?it/s]Project ID: None, Chunking table descriptions into documents: 100%|██████████| 6/6 [00:00<00:00, 108007.83it/s]
I1028 11:29:52.317 6989 wren-ai-service:32] Project ID: None Converting SQL pairs to documents...
Project ID: None, Chunking DDL commands into documents:   0%|          | 0/12 [00:00<?, ?it/s]Project ID: None, Chunking DDL commands into documents: 100%|██████████| 12/12 [00:00<00:00, 252922.85it/s]
I1028 11:29:52.322 6989 wren-ai-service:33] Project ID: None, Cleaning documents in project_meta
I1028 11:29:52.663 6989 wren-ai-service:33] Project ID: None, Cleaning documents in view_questions
W1028 11:29:52.720 6989 wren-ai-service:291] Calling QdrantDocumentStore.write_documents() with empty list
W1028 11:29:52.747 6989 wren-ai-service:291] Calling QdrantDocumentStore.write_documents() with empty list
  0%|          | 0/1 [00:00<?, ?it/s]100it [00:00, 1576.53it/s]           
INFO:     127.0.0.1:37186 - "GET /v1/semantics-preparations/a522d9669e3626bdc068ace3684e8e936f6d175d/status HTTP/1.1" 200 OK

********************************************************************************
> embedding [src.pipelines.indexing.table_description.embedding()] encountered an error<
> Node inputs:
{'chunk': "<Task finished name='Task-32' coro=<AsyncGraphAdap...",
 'embedder': '<src.providers.embedder.litellm.AsyncDocumentEmbed...'}
********************************************************************************
Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1140, in aembedding
    headers, response = await self.make_openai_embedding_request(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/logging_utils.py", line 190, in async_wrapper
    result = await func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1091, in make_openai_embedding_request
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1084, in make_openai_embedding_request
    raw_response = await openai_aclient.embeddings.with_raw_response.create(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_legacy_response.py", line 381, in wrapped
    return cast(LegacyAPIResponse[R], await func(*args, **kwargs))
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/resources/embeddings.py", line 251, in create
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_base_client.py", line 1794, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_base_client.py", line 1594, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/main.py", line 3845, in aembedding
    response = await init_response  # type: ignore
               ^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1185, in aembedding
    raise OpenAIError(
litellm.llms.openai.common_utils.OpenAIError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 139, in new_fn
    await fn(**fn_kwargs) if asyncio.iscoroutinefunction(fn) else fn(**fn_kwargs)
    ^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 219, in async_wrapper
    self._handle_exception(observation, e)
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 520, in _handle_exception
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 217, in async_wrapper
    result = await func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/pipelines/indexing/table_description.py", line 97, in embedding
    return await embedder.run(documents=chunk["documents"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/backoff/_async.py", line 151, in retry
    ret = await target(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 154, in run
    embeddings, meta = await self._embed_batch(
                       ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 115, in _embed_batch
    responses = await asyncio.gather(
                ^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 101, in embed_single_batch
    return await aembedding(
           ^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/utils.py", line 1628, in wrapper_async
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/utils.py", line 1474, in wrapper_async
    result = await original_function(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/main.py", line 3860, in aembedding
    raise exception_type(
          ^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/exception_mapping_utils.py", line 2273, in exception_type
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/exception_mapping_utils.py", line 457, in exception_type
    raise AuthenticationError(
litellm.exceptions.AuthenticationError: litellm.AuthenticationError: AuthenticationError: OpenAIException - Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
-------------------------------------------------------------------
Oh no an error! Need help with Hamilton?
Join our slack and ask for help! https://join.slack.com/t/hamilton-opensource/shared_invite/zt-2niepkra8-DGKGf_tTYhXuJWBTXtIs4g
-------------------------------------------------------------------

E1028 11:29:54.301 6989 wren-ai-service:100] Failed to prepare semantics: litellm.AuthenticationError: AuthenticationError: OpenAIException - Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1140, in aembedding
    headers, response = await self.make_openai_embedding_request(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/logging_utils.py", line 190, in async_wrapper
    result = await func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1091, in make_openai_embedding_request
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1084, in make_openai_embedding_request
    raw_response = await openai_aclient.embeddings.with_raw_response.create(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_legacy_response.py", line 381, in wrapped
    return cast(LegacyAPIResponse[R], await func(*args, **kwargs))
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/resources/embeddings.py", line 251, in create
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_base_client.py", line 1794, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_base_client.py", line 1594, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/main.py", line 3845, in aembedding
    response = await init_response  # type: ignore
               ^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1185, in aembedding
    raise OpenAIError(
litellm.llms.openai.common_utils.OpenAIError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/project/wren/wren-ai-service/src/web/v1/services/semantics_preparation.py", line 92, in prepare_semantics
    await asyncio.gather(*tasks)
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 219, in async_wrapper
    self._handle_exception(observation, e)
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 520, in _handle_exception
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 217, in async_wrapper
    result = await func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/pipelines/indexing/table_description.py", line 153, in run
    return await self._pipe.execute(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 392, in execute
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 383, in execute
    outputs = await self.raw_execute(_final_vars, overrides, display_graph, inputs=inputs)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 343, in raw_execute
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 338, in raw_execute
    results = await await_dict_of_tasks(task_dict)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 40, in await_dict_of_tasks
    coroutines_gathered = await asyncio.gather(*coroutines)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 53, in process_value
    return await val
           ^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 108, in new_fn
    fn_kwargs = await await_dict_of_tasks(task_dict)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 40, in await_dict_of_tasks
    coroutines_gathered = await asyncio.gather(*coroutines)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 53, in process_value
    return await val
           ^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 108, in new_fn
    fn_kwargs = await await_dict_of_tasks(task_dict)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 40, in await_dict_of_tasks
    coroutines_gathered = await asyncio.gather(*coroutines)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 53, in process_value
    return await val
           ^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 139, in new_fn
    await fn(**fn_kwargs) if asyncio.iscoroutinefunction(fn) else fn(**fn_kwargs)
    ^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 219, in async_wrapper
    self._handle_exception(observation, e)
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 520, in _handle_exception
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 217, in async_wrapper
    result = await func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/pipelines/indexing/table_description.py", line 97, in embedding
    return await embedder.run(documents=chunk["documents"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/backoff/_async.py", line 151, in retry
    ret = await target(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 154, in run
    embeddings, meta = await self._embed_batch(
                       ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 115, in _embed_batch
    responses = await asyncio.gather(
                ^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 101, in embed_single_batch
    return await aembedding(
           ^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/utils.py", line 1628, in wrapper_async
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/utils.py", line 1474, in wrapper_async
    result = await original_function(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/main.py", line 3860, in aembedding
    raise exception_type(
          ^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/exception_mapping_utils.py", line 2273, in exception_type
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/exception_mapping_utils.py", line 457, in exception_type
    raise AuthenticationError(
litellm.exceptions.AuthenticationError: litellm.AuthenticationError: AuthenticationError: OpenAIException - Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

********************************************************************************
> embedding [src.pipelines.indexing.db_schema.embedding()] encountered an error<
> Node inputs:
{'chunk': "<Task finished name='Task-18' coro=<AsyncGraphAdap...",
 'embedder': '<src.providers.embedder.litellm.AsyncDocumentEmbed...'}
********************************************************************************
Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1140, in aembedding
    headers, response = await self.make_openai_embedding_request(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/logging_utils.py", line 190, in async_wrapper
    result = await func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1091, in make_openai_embedding_request
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1084, in make_openai_embedding_request
    raw_response = await openai_aclient.embeddings.with_raw_response.create(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_legacy_response.py", line 381, in wrapped
    return cast(LegacyAPIResponse[R], await func(*args, **kwargs))
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/resources/embeddings.py", line 251, in create
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_base_client.py", line 1794, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_base_client.py", line 1594, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/main.py", line 3845, in aembedding
    response = await init_response  # type: ignore
               ^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1185, in aembedding
    raise OpenAIError(
litellm.llms.openai.common_utils.OpenAIError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 139, in new_fn
    await fn(**fn_kwargs) if asyncio.iscoroutinefunction(fn) else fn(**fn_kwargs)
    ^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 219, in async_wrapper
    self._handle_exception(observation, e)
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 520, in _handle_exception
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 217, in async_wrapper
    result = await func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/pipelines/indexing/db_schema.py", line 318, in embedding
    return await embedder.run(documents=chunk["documents"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/backoff/_async.py", line 151, in retry
    ret = await target(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 154, in run
    embeddings, meta = await self._embed_batch(
                       ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 115, in _embed_batch
    responses = await asyncio.gather(
                ^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 101, in embed_single_batch
    return await aembedding(
           ^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/utils.py", line 1628, in wrapper_async
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/utils.py", line 1474, in wrapper_async
    result = await original_function(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/main.py", line 3860, in aembedding
    raise exception_type(
          ^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/exception_mapping_utils.py", line 2273, in exception_type
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/exception_mapping_utils.py", line 457, in exception_type
    raise AuthenticationError(
litellm.exceptions.AuthenticationError: litellm.AuthenticationError: AuthenticationError: OpenAIException - Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
-------------------------------------------------------------------
Oh no an error! Need help with Hamilton?
Join our slack and ask for help! https://join.slack.com/t/hamilton-opensource/shared_invite/zt-2niepkra8-DGKGf_tTYhXuJWBTXtIs4g
-------------------------------------------------------------------

INFO:     127.0.0.1:37186 - "GET /v1/semantics-preparations/a522d9669e3626bdc068ace3684e8e936f6d175d/status HTTP/1.1" 200 OK
E1028 11:30:13.015 6989 wren-ai-service:266] Question Recommendation Resource with ID 'null' not found.
NoneType: None
INFO:     127.0.0.1:46254 - "GET /v1/question-recommendations/null HTTP/1.1" 200 OK
I1028 11:30:34.195 6989 wren-ai-service:141] Project ID: 1, Deleting semantics documents...
I1028 11:30:34.197 6989 wren-ai-service:33] Project ID: 1, Cleaning documents in Document
I1028 11:30:34.198 6989 wren-ai-service:33] Project ID: 1, Cleaning documents in view_questions
I1028 11:30:34.199 6989 wren-ai-service:33] Project ID: 1, Cleaning documents in table_descriptions
I1028 11:30:34.199 6989 wren-ai-service:33] Project ID: 1, Cleaning documents in project_meta
INFO:     127.0.0.1:43244 - "DELETE /v1/semantics?project_id=1 HTTP/1.1" 200 OK
INFO:     127.0.0.1:57884 - "POST /v1/semantics-preparations HTTP/1.1" 200 OK
I1028 11:36:02.999 6989 wren-ai-service:74] MDL: {"schema":"public","catalog":"wrenai","dataSource":"DUCKDB","models":[{"name":"departments","columns":[{"name":"dept_no","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"A unique identifier for each department. It serves as the primary key of the table.","displayName":"dept_no"}},{"name":"dept_name","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"The name of the department. Limited to a maximum of 40 characters. This column is also unique across the table, ensuring no two departments share the same name","displayName":"dept_name"}},{"name":"dept_emp","type":"dept_emp","properties":{},"relationship":"DepartmentsDept_noDept_empDept_no","isCalculated":false,"notNull":false},{"name":"dept_manager","type":"dept_manager","properties":{},"relationship":"DepartmentsDept_noDept_managerDept_no","isCalculated":false,"notNull":false}],"tableReference":{"catalog":"memory","schema":"main","table":"departments"},"cached":false,"properties":{"displayName":"departments"},"primaryKey":""},{"name":"dept_emp","columns":[{"name":"emp_no","type":"INTEGER","isCalculated":false,"notNull":false,"properties":{"description":"The employee number.","displayName":"emp_no"}},{"name":"dept_no","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"The department number the employee is associated with, referencing the dept_no in the departments table.","displayName":"dept_no"}},{"name":"from_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The start date of the employee's association with the department.","displayName":"from_date"}},{"name":"to_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The end date of the employee's association with the department","displayName":"to_date"}},{"name":"departments","type":"departments","properties":{},"relationship":"DepartmentsDept_noDept_empDept_no","isCalculated":false,"notNull":false},{"name":"employees","type":"employees","properties":{},"relationship":"Dept_empEmp_noEmployeesEmp_no","isCalculated":false,"notNull":false}],"tableReference":{"catalog":"memory","schema":"main","table":"dept_emp"},"cached":false,"properties":{"displayName":"dept_emp"},"primaryKey":""},{"name":"dept_manager","columns":[{"name":"emp_no","type":"INTEGER","isCalculated":false,"notNull":false,"properties":{"description":"The employee number of the department manager","displayName":"emp_no"}},{"name":"dept_no","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"The department number that the manager is assigned to, referencing the dept_no in the departments table.","displayName":"dept_no"}},{"name":"from_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The start date of the employee’s managerial role in the department.","displayName":"from_date"}},{"name":"to_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The end date of the employee’s managerial role in the department.","displayName":"to_date"}},{"name":"employees","type":"employees","properties":{},"relationship":"Dept_managerEmp_noEmployeesEmp_no","isCalculated":false,"notNull":false},{"name":"departments","type":"departments","properties":{},"relationship":"DepartmentsDept_noDept_managerDept_no","isCalculated":false,"notNull":false}],"tableReference":{"catalog":"memory","schema":"main","table":"dept_manager"},"cached":false,"properties":{"displayName":"dept_manager","description":"Tracks the assignment of managers to departments, including the period during which they managed a department"},"primaryKey":""},{"name":"employees","columns":[{"name":"emp_no","type":"INTEGER","isCalculated":false,"notNull":false,"properties":{"description":"A unique identifier for each employee. It serves as the primary key of the table","displayName":"emp_no"}},{"name":"birth_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The birth date of the employee.","displayName":"birth_date"}},{"name":"first_name","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"The first name of the employee. Limited to a maximum of 14 characters.","displayName":"first_name"}},{"name":"last_name","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"The last name of the employee. Limited to a maximum of 16 characters.","displayName":"last_name"}},{"name":"gender","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"The gender of the employee, with possible values 'M' (Male) or 'F' (Female).","displayName":"gender"}},{"name":"hire_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The date when the employee was hired.","displayName":"hire_date"}},{"name":"titles","type":"titles","properties":{},"relationship":"EmployeesEmp_noTitlesEmp_no","isCalculated":false,"notNull":false},{"name":"salaries","type":"salaries","properties":{},"relationship":"EmployeesEmp_noSalariesEmp_no","isCalculated":false,"notNull":false},{"name":"dept_manager","type":"dept_manager","properties":{},"relationship":"Dept_managerEmp_noEmployeesEmp_no","isCalculated":false,"notNull":false},{"name":"dept_emp","type":"dept_emp","properties":{},"relationship":"Dept_empEmp_noEmployeesEmp_no","isCalculated":false,"notNull":false}],"tableReference":{"catalog":"memory","schema":"main","table":"employees"},"cached":false,"properties":{"displayName":"employees","description":"Stores basic information about employees such as their employee number, name, gender, birth date, and hire date"},"primaryKey":""},{"name":"salaries","columns":[{"name":"emp_no","type":"INTEGER","isCalculated":false,"notNull":false,"properties":{"description":"The employee number","displayName":"emp_no"}},{"name":"salary","type":"INTEGER","isCalculated":false,"notNull":false,"properties":{"description":"The salary of the employee.","displayName":"salary"}},{"name":"from_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The start date of the salary period.","displayName":"from_date"}},{"name":"to_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The end date of the salary period.","displayName":"to_date"}},{"name":"employees","type":"employees","properties":{},"relationship":"EmployeesEmp_noSalariesEmp_no","isCalculated":false,"notNull":false}],"tableReference":{"catalog":"memory","schema":"main","table":"salaries"},"cached":false,"properties":{"displayName":"salaries","description":"Tracks the salary of employees, including the period during which each salary was valid."},"primaryKey":""},{"name":"titles","columns":[{"name":"emp_no","type":"INTEGER","isCalculated":false,"notNull":false,"properties":{"description":"The employee number","displayName":"emp_no"}},{"name":"title","type":"VARCHAR","isCalculated":false,"notNull":false,"properties":{"description":"The title or position held by the employee. Limited to a maximum of 50 characters.","displayName":"title"}},{"name":"from_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The start date when the employee held this title","displayName":"from_date"}},{"name":"to_date","type":"DATE","isCalculated":false,"notNull":false,"properties":{"description":"The end date when the employee held this title. This can be NULL if the employee currently holds the title.","displayName":"to_date"}},{"name":"employees","type":"employees","properties":{},"relationship":"EmployeesEmp_noTitlesEmp_no","isCalculated":false,"notNull":false}],"tableReference":{"catalog":"memory","schema":"main","table":"titles"},"cached":false,"properties":{"displayName":"titles","description":"Tracks the titles (positions) held by employees, including the period during which they held each title."},"primaryKey":""}],"relationships":[{"name":"EmployeesEmp_noTitlesEmp_no","models":["employees","titles"],"joinType":"ONE_TO_MANY","condition":"\"employees\".emp_no = \"titles\".emp_no","properties":{"description":"Each entry represents a title held by an employee during a specific time period."}},{"name":"DepartmentsDept_noDept_empDept_no","models":["departments","dept_emp"],"joinType":"ONE_TO_MANY","condition":"\"departments\".dept_no = \"dept_emp\".dept_no","properties":{}},{"name":"EmployeesEmp_noSalariesEmp_no","models":["employees","salaries"],"joinType":"ONE_TO_MANY","condition":"\"employees\".emp_no = \"salaries\".emp_no","properties":{}},{"name":"Dept_managerEmp_noEmployeesEmp_no","models":["dept_manager","employees"],"joinType":"MANY_TO_ONE","condition":"\"dept_manager\".emp_no = \"employees\".emp_no","properties":{}},{"name":"Dept_empEmp_noEmployeesEmp_no","models":["dept_emp","employees"],"joinType":"MANY_TO_ONE","condition":"\"dept_emp\".emp_no = \"employees\".emp_no","properties":{"description":"meaning an employee can be associated with multiple departments, titles, and salaries over time."}},{"name":"DepartmentsDept_noDept_managerDept_no","models":["departments","dept_manager"],"joinType":"ONE_TO_MANY","condition":"\"departments\".dept_no = \"dept_manager\".dept_no","properties":{}}],"views":[]}
I1028 11:36:03.000 6989 wren-ai-service:373] Project ID: None, DB Schema Indexing pipeline is running...
I1028 11:36:03.000 6989 wren-ai-service:166] Project ID: None, Historical Question Indexing pipeline is running...
I1028 11:36:03.001 6989 wren-ai-service:150] Project ID: None, Table Description Indexing pipeline is running...
I1028 11:36:03.001 6989 wren-ai-service:199] Project ID: None SQL Pairs Indexing pipeline is running...
I1028 11:36:03.001 6989 wren-ai-service:92] Project ID: None, Project Meta Indexing pipeline is running...
I1028 11:36:03.003 6989 wren-ai-service:61] MDL JSON: {'schema': 'public', 'catalog': 'wrenai', 'dataSource': 'DUCKDB', 'models': [{'name': 'departments', 'columns': [{'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each department. It serves as the primary key of the table.', 'displayName': 'dept_no'}}, {'name': 'dept_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The name of the department. Limited to a maximum of 40 characters. This column is also unique across the table, ensuring no two departments share the same name', 'displayName': 'dept_name'}}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'departments'}, 'cached': False, 'properties': {'displayName': 'departments'}, 'primaryKey': ''}, {'name': 'dept_emp', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number.', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number the employee is associated with, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The start date of the employee's association with the department.", 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The end date of the employee's association with the department", 'displayName': 'to_date'}}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_emp'}, 'cached': False, 'properties': {'displayName': 'dept_emp'}, 'primaryKey': ''}, {'name': 'dept_manager', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number of the department manager', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number that the manager is assigned to, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the employee’s managerial role in the department.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the employee’s managerial role in the department.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_manager'}, 'cached': False, 'properties': {'displayName': 'dept_manager', 'description': 'Tracks the assignment of managers to departments, including the period during which they managed a department'}, 'primaryKey': ''}, {'name': 'employees', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each employee. It serves as the primary key of the table', 'displayName': 'emp_no'}}, {'name': 'birth_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The birth date of the employee.', 'displayName': 'birth_date'}}, {'name': 'first_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The first name of the employee. Limited to a maximum of 14 characters.', 'displayName': 'first_name'}}, {'name': 'last_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The last name of the employee. Limited to a maximum of 16 characters.', 'displayName': 'last_name'}}, {'name': 'gender', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The gender of the employee, with possible values 'M' (Male) or 'F' (Female).", 'displayName': 'gender'}}, {'name': 'hire_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The date when the employee was hired.', 'displayName': 'hire_date'}}, {'name': 'titles', 'type': 'titles', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'salaries', 'type': 'salaries', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'employees'}, 'cached': False, 'properties': {'displayName': 'employees', 'description': 'Stores basic information about employees such as their employee number, name, gender, birth date, and hire date'}, 'primaryKey': ''}, {'name': 'salaries', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'salary', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The salary of the employee.', 'displayName': 'salary'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the salary period.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the salary period.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'salaries'}, 'cached': False, 'properties': {'displayName': 'salaries', 'description': 'Tracks the salary of employees, including the period during which each salary was valid.'}, 'primaryKey': ''}, {'name': 'titles', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'title', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The title or position held by the employee. Limited to a maximum of 50 characters.', 'displayName': 'title'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date when the employee held this title', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date when the employee held this title. This can be NULL if the employee currently holds the title.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'titles'}, 'cached': False, 'properties': {'displayName': 'titles', 'description': 'Tracks the titles (positions) held by employees, including the period during which they held each title.'}, 'primaryKey': ''}], 'relationships': [{'name': 'EmployeesEmp_noTitlesEmp_no', 'models': ['employees', 'titles'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "titles".emp_no', 'properties': {'description': 'Each entry represents a title held by an employee during a specific time period.'}}, {'name': 'DepartmentsDept_noDept_empDept_no', 'models': ['departments', 'dept_emp'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_emp".dept_no', 'properties': {}}, {'name': 'EmployeesEmp_noSalariesEmp_no', 'models': ['employees', 'salaries'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "salaries".emp_no', 'properties': {}}, {'name': 'Dept_managerEmp_noEmployeesEmp_no', 'models': ['dept_manager', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_manager".emp_no = "employees".emp_no', 'properties': {}}, {'name': 'Dept_empEmp_noEmployeesEmp_no', 'models': ['dept_emp', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_emp".emp_no = "employees".emp_no', 'properties': {'description': 'meaning an employee can be associated with multiple departments, titles, and salaries over time.'}}, {'name': 'DepartmentsDept_noDept_managerDept_no', 'models': ['departments', 'dept_manager'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_manager".dept_no', 'properties': {}}], 'views': []}
I1028 11:36:03.003 6989 wren-ai-service:61] MDL JSON: {'schema': 'public', 'catalog': 'wrenai', 'dataSource': 'DUCKDB', 'models': [{'name': 'departments', 'columns': [{'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each department. It serves as the primary key of the table.', 'displayName': 'dept_no'}}, {'name': 'dept_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The name of the department. Limited to a maximum of 40 characters. This column is also unique across the table, ensuring no two departments share the same name', 'displayName': 'dept_name'}}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'departments'}, 'cached': False, 'properties': {'displayName': 'departments'}, 'primaryKey': ''}, {'name': 'dept_emp', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number.', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number the employee is associated with, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The start date of the employee's association with the department.", 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The end date of the employee's association with the department", 'displayName': 'to_date'}}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_emp'}, 'cached': False, 'properties': {'displayName': 'dept_emp'}, 'primaryKey': ''}, {'name': 'dept_manager', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number of the department manager', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number that the manager is assigned to, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the employee’s managerial role in the department.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the employee’s managerial role in the department.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_manager'}, 'cached': False, 'properties': {'displayName': 'dept_manager', 'description': 'Tracks the assignment of managers to departments, including the period during which they managed a department'}, 'primaryKey': ''}, {'name': 'employees', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each employee. It serves as the primary key of the table', 'displayName': 'emp_no'}}, {'name': 'birth_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The birth date of the employee.', 'displayName': 'birth_date'}}, {'name': 'first_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The first name of the employee. Limited to a maximum of 14 characters.', 'displayName': 'first_name'}}, {'name': 'last_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The last name of the employee. Limited to a maximum of 16 characters.', 'displayName': 'last_name'}}, {'name': 'gender', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The gender of the employee, with possible values 'M' (Male) or 'F' (Female).", 'displayName': 'gender'}}, {'name': 'hire_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The date when the employee was hired.', 'displayName': 'hire_date'}}, {'name': 'titles', 'type': 'titles', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'salaries', 'type': 'salaries', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'employees'}, 'cached': False, 'properties': {'displayName': 'employees', 'description': 'Stores basic information about employees such as their employee number, name, gender, birth date, and hire date'}, 'primaryKey': ''}, {'name': 'salaries', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'salary', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The salary of the employee.', 'displayName': 'salary'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the salary period.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the salary period.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'salaries'}, 'cached': False, 'properties': {'displayName': 'salaries', 'description': 'Tracks the salary of employees, including the period during which each salary was valid.'}, 'primaryKey': ''}, {'name': 'titles', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'title', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The title or position held by the employee. Limited to a maximum of 50 characters.', 'displayName': 'title'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date when the employee held this title', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date when the employee held this title. This can be NULL if the employee currently holds the title.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'titles'}, 'cached': False, 'properties': {'displayName': 'titles', 'description': 'Tracks the titles (positions) held by employees, including the period during which they held each title.'}, 'primaryKey': ''}], 'relationships': [{'name': 'EmployeesEmp_noTitlesEmp_no', 'models': ['employees', 'titles'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "titles".emp_no', 'properties': {'description': 'Each entry represents a title held by an employee during a specific time period.'}}, {'name': 'DepartmentsDept_noDept_empDept_no', 'models': ['departments', 'dept_emp'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_emp".dept_no', 'properties': {}}, {'name': 'EmployeesEmp_noSalariesEmp_no', 'models': ['employees', 'salaries'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "salaries".emp_no', 'properties': {}}, {'name': 'Dept_managerEmp_noEmployeesEmp_no', 'models': ['dept_manager', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_manager".emp_no = "employees".emp_no', 'properties': {}}, {'name': 'Dept_empEmp_noEmployeesEmp_no', 'models': ['dept_emp', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_emp".emp_no = "employees".emp_no', 'properties': {'description': 'meaning an employee can be associated with multiple departments, titles, and salaries over time.'}}, {'name': 'DepartmentsDept_noDept_managerDept_no', 'models': ['departments', 'dept_manager'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_manager".dept_no', 'properties': {}}], 'views': []}
I1028 11:36:03.004 6989 wren-ai-service:61] MDL JSON: {'schema': 'public', 'catalog': 'wrenai', 'dataSource': 'DUCKDB', 'models': [{'name': 'departments', 'columns': [{'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each department. It serves as the primary key of the table.', 'displayName': 'dept_no'}}, {'name': 'dept_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The name of the department. Limited to a maximum of 40 characters. This column is also unique across the table, ensuring no two departments share the same name', 'displayName': 'dept_name'}}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'departments'}, 'cached': False, 'properties': {'displayName': 'departments'}, 'primaryKey': ''}, {'name': 'dept_emp', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number.', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number the employee is associated with, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The start date of the employee's association with the department.", 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The end date of the employee's association with the department", 'displayName': 'to_date'}}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_emp'}, 'cached': False, 'properties': {'displayName': 'dept_emp'}, 'primaryKey': ''}, {'name': 'dept_manager', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number of the department manager', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number that the manager is assigned to, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the employee’s managerial role in the department.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the employee’s managerial role in the department.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_manager'}, 'cached': False, 'properties': {'displayName': 'dept_manager', 'description': 'Tracks the assignment of managers to departments, including the period during which they managed a department'}, 'primaryKey': ''}, {'name': 'employees', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each employee. It serves as the primary key of the table', 'displayName': 'emp_no'}}, {'name': 'birth_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The birth date of the employee.', 'displayName': 'birth_date'}}, {'name': 'first_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The first name of the employee. Limited to a maximum of 14 characters.', 'displayName': 'first_name'}}, {'name': 'last_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The last name of the employee. Limited to a maximum of 16 characters.', 'displayName': 'last_name'}}, {'name': 'gender', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The gender of the employee, with possible values 'M' (Male) or 'F' (Female).", 'displayName': 'gender'}}, {'name': 'hire_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The date when the employee was hired.', 'displayName': 'hire_date'}}, {'name': 'titles', 'type': 'titles', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'salaries', 'type': 'salaries', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'employees'}, 'cached': False, 'properties': {'displayName': 'employees', 'description': 'Stores basic information about employees such as their employee number, name, gender, birth date, and hire date'}, 'primaryKey': ''}, {'name': 'salaries', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'salary', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The salary of the employee.', 'displayName': 'salary'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the salary period.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the salary period.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'salaries'}, 'cached': False, 'properties': {'displayName': 'salaries', 'description': 'Tracks the salary of employees, including the period during which each salary was valid.'}, 'primaryKey': ''}, {'name': 'titles', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'title', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The title or position held by the employee. Limited to a maximum of 50 characters.', 'displayName': 'title'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date when the employee held this title', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date when the employee held this title. This can be NULL if the employee currently holds the title.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'titles'}, 'cached': False, 'properties': {'displayName': 'titles', 'description': 'Tracks the titles (positions) held by employees, including the period during which they held each title.'}, 'primaryKey': ''}], 'relationships': [{'name': 'EmployeesEmp_noTitlesEmp_no', 'models': ['employees', 'titles'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "titles".emp_no', 'properties': {'description': 'Each entry represents a title held by an employee during a specific time period.'}}, {'name': 'DepartmentsDept_noDept_empDept_no', 'models': ['departments', 'dept_emp'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_emp".dept_no', 'properties': {}}, {'name': 'EmployeesEmp_noSalariesEmp_no', 'models': ['employees', 'salaries'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "salaries".emp_no', 'properties': {}}, {'name': 'Dept_managerEmp_noEmployeesEmp_no', 'models': ['dept_manager', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_manager".emp_no = "employees".emp_no', 'properties': {}}, {'name': 'Dept_empEmp_noEmployeesEmp_no', 'models': ['dept_emp', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_emp".emp_no = "employees".emp_no', 'properties': {'description': 'meaning an employee can be associated with multiple departments, titles, and salaries over time.'}}, {'name': 'DepartmentsDept_noDept_managerDept_no', 'models': ['departments', 'dept_manager'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_manager".dept_no', 'properties': {}}], 'views': []}
I1028 11:36:03.004 6989 wren-ai-service:61] MDL JSON: {'schema': 'public', 'catalog': 'wrenai', 'dataSource': 'DUCKDB', 'models': [{'name': 'departments', 'columns': [{'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each department. It serves as the primary key of the table.', 'displayName': 'dept_no'}}, {'name': 'dept_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The name of the department. Limited to a maximum of 40 characters. This column is also unique across the table, ensuring no two departments share the same name', 'displayName': 'dept_name'}}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'departments'}, 'cached': False, 'properties': {'displayName': 'departments'}, 'primaryKey': ''}, {'name': 'dept_emp', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number.', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number the employee is associated with, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The start date of the employee's association with the department.", 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The end date of the employee's association with the department", 'displayName': 'to_date'}}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_empDept_no', 'isCalculated': False, 'notNull': False}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_emp'}, 'cached': False, 'properties': {'displayName': 'dept_emp'}, 'primaryKey': ''}, {'name': 'dept_manager', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number of the department manager', 'displayName': 'emp_no'}}, {'name': 'dept_no', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The department number that the manager is assigned to, referencing the dept_no in the departments table.', 'displayName': 'dept_no'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the employee’s managerial role in the department.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the employee’s managerial role in the department.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'departments', 'type': 'departments', 'properties': {}, 'relationship': 'DepartmentsDept_noDept_managerDept_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'dept_manager'}, 'cached': False, 'properties': {'displayName': 'dept_manager', 'description': 'Tracks the assignment of managers to departments, including the period during which they managed a department'}, 'primaryKey': ''}, {'name': 'employees', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'A unique identifier for each employee. It serves as the primary key of the table', 'displayName': 'emp_no'}}, {'name': 'birth_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The birth date of the employee.', 'displayName': 'birth_date'}}, {'name': 'first_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The first name of the employee. Limited to a maximum of 14 characters.', 'displayName': 'first_name'}}, {'name': 'last_name', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The last name of the employee. Limited to a maximum of 16 characters.', 'displayName': 'last_name'}}, {'name': 'gender', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': "The gender of the employee, with possible values 'M' (Male) or 'F' (Female).", 'displayName': 'gender'}}, {'name': 'hire_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The date when the employee was hired.', 'displayName': 'hire_date'}}, {'name': 'titles', 'type': 'titles', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'salaries', 'type': 'salaries', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_manager', 'type': 'dept_manager', 'properties': {}, 'relationship': 'Dept_managerEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}, {'name': 'dept_emp', 'type': 'dept_emp', 'properties': {}, 'relationship': 'Dept_empEmp_noEmployeesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'employees'}, 'cached': False, 'properties': {'displayName': 'employees', 'description': 'Stores basic information about employees such as their employee number, name, gender, birth date, and hire date'}, 'primaryKey': ''}, {'name': 'salaries', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'salary', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The salary of the employee.', 'displayName': 'salary'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date of the salary period.', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date of the salary period.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noSalariesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'salaries'}, 'cached': False, 'properties': {'displayName': 'salaries', 'description': 'Tracks the salary of employees, including the period during which each salary was valid.'}, 'primaryKey': ''}, {'name': 'titles', 'columns': [{'name': 'emp_no', 'type': 'INTEGER', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The employee number', 'displayName': 'emp_no'}}, {'name': 'title', 'type': 'VARCHAR', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The title or position held by the employee. Limited to a maximum of 50 characters.', 'displayName': 'title'}}, {'name': 'from_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The start date when the employee held this title', 'displayName': 'from_date'}}, {'name': 'to_date', 'type': 'DATE', 'isCalculated': False, 'notNull': False, 'properties': {'description': 'The end date when the employee held this title. This can be NULL if the employee currently holds the title.', 'displayName': 'to_date'}}, {'name': 'employees', 'type': 'employees', 'properties': {}, 'relationship': 'EmployeesEmp_noTitlesEmp_no', 'isCalculated': False, 'notNull': False}], 'tableReference': {'catalog': 'memory', 'schema': 'main', 'table': 'titles'}, 'cached': False, 'properties': {'displayName': 'titles', 'description': 'Tracks the titles (positions) held by employees, including the period during which they held each title.'}, 'primaryKey': ''}], 'relationships': [{'name': 'EmployeesEmp_noTitlesEmp_no', 'models': ['employees', 'titles'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "titles".emp_no', 'properties': {'description': 'Each entry represents a title held by an employee during a specific time period.'}}, {'name': 'DepartmentsDept_noDept_empDept_no', 'models': ['departments', 'dept_emp'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_emp".dept_no', 'properties': {}}, {'name': 'EmployeesEmp_noSalariesEmp_no', 'models': ['employees', 'salaries'], 'joinType': 'ONE_TO_MANY', 'condition': '"employees".emp_no = "salaries".emp_no', 'properties': {}}, {'name': 'Dept_managerEmp_noEmployeesEmp_no', 'models': ['dept_manager', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_manager".emp_no = "employees".emp_no', 'properties': {}}, {'name': 'Dept_empEmp_noEmployeesEmp_no', 'models': ['dept_emp', 'employees'], 'joinType': 'MANY_TO_ONE', 'condition': '"dept_emp".emp_no = "employees".emp_no', 'properties': {'description': 'meaning an employee can be associated with multiple departments, titles, and salaries over time.'}}, {'name': 'DepartmentsDept_noDept_managerDept_no', 'models': ['departments', 'dept_manager'], 'joinType': 'ONE_TO_MANY', 'condition': '"departments".dept_no = "dept_manager".dept_no', 'properties': {}}], 'views': []}
Project ID: None, Chunking views into documents: 0it [00:00, ?it/s]Project ID: None, Chunking views into documents: 0it [00:00, ?it/s]
Project ID: None, Chunking table descriptions into documents:   0%|          | 0/6 [00:00<?, ?it/s]Project ID: None, Chunking table descriptions into documents: 100%|██████████| 6/6 [00:00<00:00, 139810.13it/s]
I1028 11:36:03.006 6989 wren-ai-service:32] Project ID: None Converting SQL pairs to documents...
INFO:     127.0.0.1:57884 - "GET /v1/semantics-preparations/bad483702c05f4af5dbda26b23024b61e9fc129b/status HTTP/1.1" 200 OK
Project ID: None, Chunking DDL commands into documents:   0%|          | 0/12 [00:00<?, ?it/s]Project ID: None, Chunking DDL commands into documents: 100%|██████████| 12/12 [00:00<00:00, 244328.39it/s]
I1028 11:36:03.008 6989 wren-ai-service:33] Project ID: None, Cleaning documents in project_meta
I1028 11:36:03.011 6989 wren-ai-service:33] Project ID: None, Cleaning documents in view_questions
W1028 11:36:03.014 6989 wren-ai-service:291] Calling QdrantDocumentStore.write_documents() with empty list
W1028 11:36:03.021 6989 wren-ai-service:291] Calling QdrantDocumentStore.write_documents() with empty list
  0%|          | 0/1 [00:00<?, ?it/s]100it [00:00, 28271.12it/s]          
INFO:     127.0.0.1:57884 - "GET /v1/semantics-preparations/bad483702c05f4af5dbda26b23024b61e9fc129b/status HTTP/1.1" 200 OK

********************************************************************************
> embedding [src.pipelines.indexing.table_description.embedding()] encountered an error<
> Node inputs:
{'chunk': "<Task finished name='Task-201' coro=<AsyncGraphAda...",
 'embedder': '<src.providers.embedder.litellm.AsyncDocumentEmbed...'}
********************************************************************************
Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1140, in aembedding
    headers, response = await self.make_openai_embedding_request(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/logging_utils.py", line 190, in async_wrapper
    result = await func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1091, in make_openai_embedding_request
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1084, in make_openai_embedding_request
    raw_response = await openai_aclient.embeddings.with_raw_response.create(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_legacy_response.py", line 381, in wrapped
    return cast(LegacyAPIResponse[R], await func(*args, **kwargs))
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/resources/embeddings.py", line 251, in create
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_base_client.py", line 1794, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_base_client.py", line 1594, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/main.py", line 3845, in aembedding
    response = await init_response  # type: ignore
               ^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1185, in aembedding
    raise OpenAIError(
litellm.llms.openai.common_utils.OpenAIError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 139, in new_fn
    await fn(**fn_kwargs) if asyncio.iscoroutinefunction(fn) else fn(**fn_kwargs)
    ^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 219, in async_wrapper
    self._handle_exception(observation, e)
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 520, in _handle_exception
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 217, in async_wrapper
    result = await func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/pipelines/indexing/table_description.py", line 97, in embedding
    return await embedder.run(documents=chunk["documents"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/backoff/_async.py", line 151, in retry
    ret = await target(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 154, in run
    embeddings, meta = await self._embed_batch(
                       ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 115, in _embed_batch
    responses = await asyncio.gather(
                ^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 101, in embed_single_batch
    return await aembedding(
           ^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/utils.py", line 1628, in wrapper_async
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/utils.py", line 1474, in wrapper_async
    result = await original_function(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/main.py", line 3860, in aembedding
    raise exception_type(
          ^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/exception_mapping_utils.py", line 2273, in exception_type
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/exception_mapping_utils.py", line 457, in exception_type
    raise AuthenticationError(
litellm.exceptions.AuthenticationError: litellm.AuthenticationError: AuthenticationError: OpenAIException - Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
-------------------------------------------------------------------
Oh no an error! Need help with Hamilton?
Join our slack and ask for help! https://join.slack.com/t/hamilton-opensource/shared_invite/zt-2niepkra8-DGKGf_tTYhXuJWBTXtIs4g
-------------------------------------------------------------------

E1028 11:36:04.990 6989 wren-ai-service:100] Failed to prepare semantics: litellm.AuthenticationError: AuthenticationError: OpenAIException - Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1140, in aembedding
    headers, response = await self.make_openai_embedding_request(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/logging_utils.py", line 190, in async_wrapper
    result = await func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1091, in make_openai_embedding_request
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1084, in make_openai_embedding_request
    raw_response = await openai_aclient.embeddings.with_raw_response.create(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_legacy_response.py", line 381, in wrapped
    return cast(LegacyAPIResponse[R], await func(*args, **kwargs))
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/resources/embeddings.py", line 251, in create
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_base_client.py", line 1794, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_base_client.py", line 1594, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/main.py", line 3845, in aembedding
    response = await init_response  # type: ignore
               ^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1185, in aembedding
    raise OpenAIError(
litellm.llms.openai.common_utils.OpenAIError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/workspace/project/wren/wren-ai-service/src/web/v1/services/semantics_preparation.py", line 92, in prepare_semantics
    await asyncio.gather(*tasks)
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 219, in async_wrapper
    self._handle_exception(observation, e)
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 520, in _handle_exception
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 217, in async_wrapper
    result = await func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/pipelines/indexing/table_description.py", line 153, in run
    return await self._pipe.execute(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 392, in execute
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 383, in execute
    outputs = await self.raw_execute(_final_vars, overrides, display_graph, inputs=inputs)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 343, in raw_execute
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 338, in raw_execute
    results = await await_dict_of_tasks(task_dict)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 40, in await_dict_of_tasks
    coroutines_gathered = await asyncio.gather(*coroutines)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 53, in process_value
    return await val
           ^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 108, in new_fn
    fn_kwargs = await await_dict_of_tasks(task_dict)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 40, in await_dict_of_tasks
    coroutines_gathered = await asyncio.gather(*coroutines)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 53, in process_value
    return await val
           ^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 108, in new_fn
    fn_kwargs = await await_dict_of_tasks(task_dict)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 40, in await_dict_of_tasks
    coroutines_gathered = await asyncio.gather(*coroutines)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 53, in process_value
    return await val
           ^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 139, in new_fn
    await fn(**fn_kwargs) if asyncio.iscoroutinefunction(fn) else fn(**fn_kwargs)
    ^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 219, in async_wrapper
    self._handle_exception(observation, e)
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 520, in _handle_exception
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 217, in async_wrapper
    result = await func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/pipelines/indexing/table_description.py", line 97, in embedding
    return await embedder.run(documents=chunk["documents"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/backoff/_async.py", line 151, in retry
    ret = await target(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 154, in run
    embeddings, meta = await self._embed_batch(
                       ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 115, in _embed_batch
    responses = await asyncio.gather(
                ^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 101, in embed_single_batch
    return await aembedding(
           ^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/utils.py", line 1628, in wrapper_async
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/utils.py", line 1474, in wrapper_async
    result = await original_function(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/main.py", line 3860, in aembedding
    raise exception_type(
          ^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/exception_mapping_utils.py", line 2273, in exception_type
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/exception_mapping_utils.py", line 457, in exception_type
    raise AuthenticationError(
litellm.exceptions.AuthenticationError: litellm.AuthenticationError: AuthenticationError: OpenAIException - Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

********************************************************************************
> embedding [src.pipelines.indexing.db_schema.embedding()] encountered an error<
> Node inputs:
{'chunk': "<Task finished name='Task-187' coro=<AsyncGraphAda...",
 'embedder': '<src.providers.embedder.litellm.AsyncDocumentEmbed...'}
********************************************************************************
Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1140, in aembedding
    headers, response = await self.make_openai_embedding_request(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/logging_utils.py", line 190, in async_wrapper
    result = await func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1091, in make_openai_embedding_request
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1084, in make_openai_embedding_request
    raw_response = await openai_aclient.embeddings.with_raw_response.create(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_legacy_response.py", line 381, in wrapped
    return cast(LegacyAPIResponse[R], await func(*args, **kwargs))
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/resources/embeddings.py", line 251, in create
    return await self._post(
           ^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_base_client.py", line 1794, in post
    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/openai/_base_client.py", line 1594, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/main.py", line 3845, in aembedding
    response = await init_response  # type: ignore
               ^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/llms/openai/openai.py", line 1185, in aembedding
    raise OpenAIError(
litellm.llms.openai.common_utils.OpenAIError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/hamilton/async_driver.py", line 139, in new_fn
    await fn(**fn_kwargs) if asyncio.iscoroutinefunction(fn) else fn(**fn_kwargs)
    ^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 219, in async_wrapper
    self._handle_exception(observation, e)
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 520, in _handle_exception
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/langfuse/decorators/langfuse_decorator.py", line 217, in async_wrapper
    result = await func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/pipelines/indexing/db_schema.py", line 318, in embedding
    return await embedder.run(documents=chunk["documents"])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/backoff/_async.py", line 151, in retry
    ret = await target(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 154, in run
    embeddings, meta = await self._embed_batch(
                       ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 115, in _embed_batch
    responses = await asyncio.gather(
                ^^^^^^^^^^^^^^^^^^^^^
  File "/workspace/project/wren/wren-ai-service/src/providers/embedder/litellm.py", line 101, in embed_single_batch
    return await aembedding(
           ^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/utils.py", line 1628, in wrapper_async
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/utils.py", line 1474, in wrapper_async
    result = await original_function(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/main.py", line 3860, in aembedding
    raise exception_type(
          ^^^^^^^^^^^^^^^
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/exception_mapping_utils.py", line 2273, in exception_type
    raise e
  File "/openhands/poetry/openhands-ai-5O4_aCHf-py3.12/lib/python3.12/site-packages/litellm/litellm_core_utils/exception_mapping_utils.py", line 457, in exception_type
    raise AuthenticationError(
litellm.exceptions.AuthenticationError: litellm.AuthenticationError: AuthenticationError: OpenAIException - Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-place******************ting. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
-------------------------------------------------------------------
Oh no an error! Need help with Hamilton?
Join our slack and ask for help! https://join.slack.com/t/hamilton-opensource/shared_invite/zt-2niepkra8-DGKGf_tTYhXuJWBTXtIs4g
-------------------------------------------------------------------

INFO:     127.0.0.1:57884 - "GET /v1/semantics-preparations/bad483702c05f4af5dbda26b23024b61e9fc129b/status HTTP/1.1" 200 OK
